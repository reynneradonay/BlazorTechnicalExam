@inject HttpClient Http

<div class="modal @ModalClass" style="display:@ModalDisplay" id="toDoModal" tabindex="-1" aria-labelledby="toDoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="toDoModalLabel">@ModalTitle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="() => CloseModal()"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="ToDoSelected" OnValidSubmit="UpdateToDo">
                    <DataAnnotationsValidator />
                    <div class="row mb-3">
                        <label for="@ToDoSelected.Title" class="col-sm-2 col-form-label">To Do</label>
                        <div class="col-sm-10">
                            <InputText @bind-Value="ToDoSelected.Title" id="toDoItem" placeholder="To Do" class="form-control"></InputText>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="toDoStatus" class="col-sm-2 col-form-label">Status</label>
                        <div class="col-sm-10">
                            <InputSelect @bind-Value="@ToDoSelected.Status" class="form-select" id="toDoStatus">
                                @foreach (ToDoStatus status in Enum.GetValues(typeof(ToDoStatus)))
                                {
                                    <option value="@GetStatus(status)">@GetStatus(status)</option>
                                }
                            </InputSelect>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="toDoDueDate" class="col-sm-2 col-form-label">Due On</label>
                        <div class="col-sm-10">
                            <InputDate @bind-Value="@ToDoSelected.DueDate" class="form-control" id="toDoDueDate"></InputDate>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="todoCategory" class="col-sm-2 col-form-label">Category</label>
                        <div class="col-sm-10">
                            <InputSelect @bind-Value="@ToDoSelected.Category" class="form-select" id="todoCategory">
                                @foreach (ToDoCategory category in Enum.GetValues(typeof(ToDoCategory)))
                                {
                                    <option value="@GetCategory(category)">@GetCategory(category)</option>
                                }
                            </InputSelect>
                        </div>
                    </div>
                    <div class="text-end button-control">
                        @if (ToDoSelected.Id > 0)
                        {
                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="DeleteToDo">Delete</button>
                            <span></span>
                        }
                        <button type="button" class="btn btn-primary" @onclick="UpdateToDo">Save Changes</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}